// profile to test the workflow
params {


  resultsDir = "results" // keep this local for testing
  batchName = "batch-coad-subtype-20240510"
  pipeline = 'full'
  logInfoFile = 'coad-subtype-log-info.txt'

	batch_correction{
    tcga_coad_cms1 = ['tcga.gdc_platform']
    tcga_coad_cms2 = ['tcga.gdc_platform']
    tcga_coad_cms3 = ['tcga.gdc_platform']
    tcga_coad_cms4 = ['tcga.gdc_platform']
    }
 
  full.tcga_project = 'tcga_coad'

  recount.norm =['logcpm']
  recount.min_tpm=[1]
  recount.frac_samples=[0.2]
  recount.th_purity=[0.3]

  // analysis parameters
  zoo.animals = ['panda', 'dragon'] //'panda','panda_lioness', 'dragon',
  zoo.motif = "/home/ubuntu/tcga-coad-subtype/priors/MotifPriorGencode_p5.txt"
  zoo.ppi = "/home/ubuntu/tcga-coad-subtype/priors/ppi_Gencode_p5.txt"
  zoo.panda_lioness = "--with_header --fmt h5 --computing cpu --precision single --mode_process intersection --save_single_lioness  --as_adjacency --ignore_final"
  zoo.otter_lioness = " --fmt h5 --precision single --iterations 3"
  zoo.panda = "--with_header --as_adjacency --mode_process intersection"

  tissues{
    tcga_coad = ['tumor']
    tcga_coad_cms1 = ['tumor']
    tcga_coad_cms2 = ['tumor']
    tcga_coad_cms3 = ['tumor']
    tcga_coad_cms4 = ['tumor']
    }

full_metadata = '/home/ubuntu/tcga-coad-subtype/full_coad_subtypes.json'

methylation.probe_map = '/home/ubuntu/viola/tcga-data-nf/bin/r/local_assets/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'//'s3://projectstcga/data/raw-data/mapping/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'
methylation.tf_list = '/home/ubuntu/viola/tcga-data-nf/bin/r/local_assets/TF_names_v_1.01.txt' //'s3://projectstcga/data/raw-data/mapping/methylation/TF_names_v_1.01.txt'

}

executor {
	name = 'local'
	cpus   = 16
	memory = 48.GB
}
	
process {	
	cpus = 16
	memory = 32.GB
}


dag{
  enable = true
  verbose = false//true
  file = 'dags/dag-test.html'
  direction = 'LR'
}


// CONDA envronments

process {
    withLabel: 'merge_tables' {
        conda = '/home/ubuntu/miniconda3/envs/merge_tables'
    }

    withLabel: 'r_download' {
        conda = '/home/ubuntu/miniconda3/envs/r_all'
    }

    withLabel: 'r_base' {
        conda = '/home/ubuntu/miniconda3/envs/r_all'
    }

	withLabel: 'prepare_expression' {
		conda = '/home/ubuntu/miniconda3/envs/r_all'
	
	}

	withLabel: 'prepare_methylation' {
		conda = '/home/ubuntu/miniconda3/envs/r_all'
	}

	withLabel: 'netzoopy_panda' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

	withLabel: 'netzoopy_pandalioness' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

	withLabel: 'netzoopy_dragon' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

	withLabel: 'netzoopy_dragonlioness' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

}


tower {
  enabled = true
  accessToken = 'eyJ0aWQiOiA4MjQyfS45ZWZjYzM1OGJkMzE2ODRkODRlMjliMzYxOTEzMDFlOTI4NWJmNWIy'}
