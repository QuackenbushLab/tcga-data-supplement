params {

  params.filter = "$projectDir/assets/NO_FILE"

  dataDir = "data"
  resultsDir = "results" // keep this local for testing
  batchName = "my-batch"
  pipeline = 'download'
  logInfoFile = 'log-info.txt'


  metadata = "conf/metadata_expression.csv"
  // Metadata for analysis
  metadata_expression = "conf/metadata_expression.csv"
  metadata_dragon = "conf/metadata_dragon.csv"

  recount.metadata_prepare = 'conf/expression_prepare_table.csv'
  recount.norm =['tpm']
  recount.min_tpm=[1]
  recount.frac_samples=[0.0001,0.2]
  recount.th_purity=[0.00001,0.5]

  tissues{
    tcga_luad = ['all']
    tcga_blca = ['all']
    }

  batch_correction{
    tcga_coad = ['tcga.gdc_platform']
    }

  filter.samples = 'conf/tcga_luad_samples.txt'

  methylation.probe_map = 'bin/r/local_assets/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'//'s3://projectstcga/data/raw-data/mapping/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'
  methylation.tf_list = 'bin/r/local_assets/TF_names_v_1.01.txt' //'s3://projectstcga/data/raw-data/mapping/methylation/TF_names_v_1.01.txt'
  methylation.levine_exclusion = 's3://projectstcga/data/raw-data/mapping/methylation/levine_gene_exclusions.csv'
  methylation.metadata_prepare = 'conf/methylation_prepare_table.csv'
  methylation.to_npn = 'FALSE'
  methylation.to_mval = 'TRUE'

  zoo.animals = ['dragon','dragon_lioness']//['panda','otter_lioness','panda_lioness']


  // parameters for TCGA
  zoo.motif = "testdata/other/test_motif_prior.txt"
  zoo.ppi = "testdata/other/test_ppi.txt"
  zoo.panda_lioness = "--with_header --fmt h5 --computing cpu --precision single --mode_process intersection --save_single_lioness  --as_adjacency --ignore_final"
  zoo.otter_lioness = " --fmt h5 --precision single --iterations 3"
  zoo.panda = "--with_header --as_adjacency --mode_process intersection"

}


// include basic process configuration options
includeConfig 'conf/base.config'

// Change this to the appropriate one
//includeConfig 'conf/download_metadata_empty.config'

trace.overwrite = true
report.overwrite = true
timeline.overwrite = true
dag.overwrite = true

conda.enabled = true
// CONDA envronments

params{
    pipeline = 'prepare'
    //resultsDir = '/home/ubuntu/viola/prepare-methylation/results'
    resultsDir = 's3://projectstcga/data/processed-data/'
    batchName = 'methylation_prepare_20240727'
  //methylation.metadata_prepare = '/home/ubuntu/viola/prepare-methylation/downloaded_methylation_metadata.csv'
  methylation.metadata_prepare = 's3://projectstcga/data/raw-data/methylation-20240727/methylation_download_20240727/downloaded_methylation_metadata.csv'
  recount.metadata_prepare = ''
  //methylation.probe_map =
  //'/home/ubuntu/viola/tcga-data-nf/bin/r/local_assets/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'
  methylation.probe_map = 's3://projectstcga/data/raw-data/mapping/methylation/450k_promoter_probe_map_TSS200_TSS0_one_probe_to_many_genes.csv'
  methylation.tf_list = 'NO_FILE'//'s3://projectstcga/data/raw-data/mapping/methylation/TF_names_v_1.01.txt'

  tissues{
    tcga_paad = ['all']
    tcga_luad = ['all']
    tcga_lusc = ['all']
    tcga_brca = ['all']
    tcga_kirc = ['all']
    tcga_coad = ['all']
    tcga_prad = ['all']
    tcga_dlbc = ['all']
    tcga_laml = ['all']
    tcga_lihc = ['all']
    tcga_skcm = ['all']
    tcga_stad = ['all']

    }

}


process {
    withLabel: 'merge_tables' {
        conda = '/home/ubuntu/miniconda3/envs/merge_tables'
    }

    withLabel: 'r_download' {
        conda = '/home/ubuntu/miniconda3/envs/r_all'
    }

    withLabel: 'r_base' {
        conda = '/home/ubuntu/miniconda3/envs/r_all'
    }

	withLabel: 'prepare_expression' {
		conda = '/home/ubuntu/miniconda3/envs/r_all'
	
	}

	withLabel: 'prepare_methylation' {
		conda = '/home/ubuntu/miniconda3/envs/r_all'
	}

	withLabel: 'netzoopy_panda' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

	withLabel: 'netzoopy_pandalioness' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

	withLabel: 'netzoopy_dragon' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

	withLabel: 'netzoopy_dragonlioness' {
		conda = '/home/ubuntu/miniconda3/envs/analysis'
	}

}
